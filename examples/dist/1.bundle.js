(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{140:function(n,t,o){var e=o(1),a=o(4),i=o(54).PageRenderer;i.__esModule&&(i=i.default);var l=a({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(141)}},componentWillMount:function(){},render:function(){return e.createElement(i,Object.assign({},this.props,{content:this.state.content}))}});l.__catalog_loader__=!0,n.exports=l},141:function(n,t){n.exports="# d3-tagcloud-for-react ☁️\n\n[npm](https://www.npmjs.com/package/d3-tagcloud-for-react) / [demo](https://veysiyildiz.github.io/d3-tagcloud-for-react)\n\nAnother tag cloud for react with two variable fontSize and opacity, using the wonderful [d3-cloud](https://github.com/jasondavies/d3-cloud) under the hood.\n\n## Installation\n\n```code\n$ npm install d3-tagcloud-for-react\n```\n\n## Usage\n\n```javascript\nimport React, { Component } from 'react'\nimport TagCloud, {renderData} from 'd3-tagcloud-for-react';\n\nconst colorarray = [\n  '#8c5fc4',\n  '#61b8ff',\n  '#f7d286',\n  '#e86971',\n  '#76bb7f',\n  '#5bbeca',\n]\nconst data = [\n  {\n  label: 'React',\n  fontSize: 10,\n  opacity: 8,\n  color:'blue'\n  },\n  {\n  label: 'jQuery',\n  fontSize: 9,\n  opacity: 9,\n  },\n  {\n  label: 'ECMAScript 6',\n  fontSize: 4,\n  opacity: 7,\n  },\n  {\n  label: 'webpack',\n  fontSize: 4,\n  opacity: 4,\n  },\n  {\n  label: 'Redux',\n  fontSize: 4,\n  opacity: 7,\n  },\n  {\n  label: 'HTML5',\n  fontSize: 9,\n  opacity: 9,\n  },\n  {\n  label: 'JSON APIs',\n  fontSize: 9,\n  opacity: 6,\n  },\n  {\n  label: 'JavaScript',\n  fontSize: 9,\n  opacity: 8,\n  },\n  {\n  label: 'CSS3',\n  fontSize: 9,\n  opacity: 9,\n  },\n  {\n  label: 'PHP',\n  fontSize: 8,\n  opacity: 3,\n  },\n  {\n  label: 'MySQL',\n  fontSize: 8,\n  opacity: 4,\n  },\n  {\n  label: 'WordPress',\n  fontSize: 9,\n  opacity: 8,\n  },\n  {\n  label: 'Github',\n  fontSize: 6,\n  opacity: 5,\n  },\n  {\n  label: 'SASS',\n  fontSize: 6,\n  opacity: 6,\n  },\n  {\n  label: 'Node.js',\n  fontSize: 4,\n  opacity: 4,\n  },\n  {\n  label: 'JSX',\n  fontSize: 8,\n  opacity: 5,\n  },\n  {\n  label: 'SEO',\n  fontSize: 9,\n  opacity: 8,\n  },\n  {\n  label: 'Redux Saga',\n  fontSize: 4,\n  opacity: 6,\n  },\n  {\n  label: 'Immutable',\n  fontSize: 4,\n  opacity: 5,\n  },\n  {\n  label: 'CSS Javascript',\n  fontSize: 4,\n  opacity: 6,\n  },\n  {\n  label: 'GraphQL',\n  fontSize: 1,\n  opacity: 4,\n  },\n]\n\nclass DemoCloud extends Component {\n  render() {\n    return (\n      <TagCloud \n        className='tag-cloud'\n        // rotate={() => Math.round(Math.random() * 180)}\n        // spiral={1}\n        style={{\n          fontFamily: 'sans-serif',\n          // fontSize: () => Math.round(Math.random() * 50) + 16,\n          fontSize: 30,\n          // color: () => randomColor(colorArray),\n          padding: 5,\n          width: '100%',\n          height: '600px',\n        }}\n        data={data}\n        colorarray={colorarray}\n      >\n        {renderData(data)}\n        <div\n          style={{\n            fontSize: 30,\n            fontWeight: 'bold',\n            opacity: 0.9,\n            padding: 12,\n            color: 'black'\n          }}\n        >\n          Black\n        </div>\n      </TagCloud>\n    );\n  }\n}\n```\n\n## Documentation\n\n`<TagCloud>` props:\n\nname | description | type | default\n-----|-------------|------|---------\nstyle.fontSize | Font size needed for calculating layout | Function/Number | `20`\nstyle.fontFamily | Font family needed for calculating layout | Function/String | `serif`\nstyle.fontWeight | Font weight needed for calculating layout | Function/Number | `normal`\nstyle.fontStyle | Font style needed for calculating layout | Function/String | `normal`\nstyle.padding | Padding between tags (px) | Function/Number | `1`\nstyle.color | Color to be used by tags | Function/String | `randomColor`\nrotate | Rotation in degrees | Function/Number | `0`\ncolorArray | Color Palette | Array | `null`\ndata | Tags Array | Array | `null`\nrandom | Randomizer function | Function | `Math.random`\n\nAny component can be used as a child component. `TagCloud` scans the child components for the following props for its layout calculation:\n\nname | description | type | default\n-----|-------------|------|---------\nstyle.fontSize | Font size needed for calculating layout | Function/Number | `20`\nstyle.fontFamily | Font family needed for calculating layout | Function/String | `serif`\nstyle.fontWeight | Font weight needed for calculating layout | Function/Number | `normal`\nstyle.fontStyle | Font style needed for calculating layout | Function/String | `normal`\nstyle.opacity | Opacity for Tags | Function/Number | `1`\nstyle.padding | Padding between tags (px) | Function/Number | `1`\nstyle.color | Color to be used by tag | Function/String | `(none)`\nrotate | Rotation in degrees | Function/Number | `0`\n\n\n## Examples\n\n[demo](https://veysiyildiz.github.io/d3-tagcloud-for-react)\n[Veysi YILDIZ (Cv)](https://veysiyildiz.github.io)\n\n\n## Resources\n\n- [https://github.com/jasondavies/d3-cloud](https://github.com/jasondavies/d3-cloud)\n\n## License\n\n[MIT](./LICENSE.txt)"}}]);